<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="BlockStyleColor.StatsDownload"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    IsTabStop="false"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:BlockStyleColor"
    xmlns:common="using:BlockStyleColor.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <UserControl.Resources>

        <!-- TODO: Delete this line if the key AppName is declared in App.xaml -->
        <x:String x:Key="AppName">My Application</x:String>

        <CollectionViewSource
        	x:Name="groupedItemsViewSource"
        	Source="{Binding Groups}"
        	IsSourceGrouped="true"
        	ItemsPath="Items"
            d:Source="{Binding ItemGroups}"
            />

        <Style TargetType="ProgressBar">
            <Setter Property="Foreground" Value="{ThemeResource ProgressBarForegroundThemeBrush}" />
            <Setter Property="Background" Value="{ThemeResource ProgressBarBackgroundThemeBrush}" />
            <Setter Property="BorderBrush" Value="{ThemeResource ProgressBarBorderThemeBrush}" />
            <Setter Property="BorderThickness" Value="{ThemeResource ProgressBarBorderThemeThickness}" />
            <Setter Property="Maximum" Value="100" />
            <Setter Property="MinHeight" Value="{ThemeResource ProgressBarThemeMinHeight}" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ProgressBar">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="Updating" To="Determinate">
                                            <Storyboard>
                                                <RepositionThemeAnimation TargetName="ProgressBarIndicator" FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.IndicatorLengthDelta}" />
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Paused" To="Determinate">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="ProgressBarIndicator"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.25" />
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Indeterminate">
                                            <Storyboard>
                                                <FadeInThemeAnimation TargetName="EllipseGrid" />
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Determinate" />
                                    <VisualState x:Name="Updating" />
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimation Storyboard.TargetName="EllipseGrid"
                                                     Duration="0:0:3.917"
                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                     From="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContainerAnimationStartPosition}"
                                                     To="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContainerAnimationEndPosition}" />
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E1">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:1" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" KeySpline="0.4,0,0.6,1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:3" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationEndPosition}" KeySpline="0.4,0,0.6,1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E2">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:1.167" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" KeySpline="0.4,0,0.6,1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:2.167" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:3.167" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationEndPosition}" KeySpline="0.4,0,0.6,1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E3">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:1.333" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" KeySpline="0.4,0,0.6,1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:2.333" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:3.333" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationEndPosition}" KeySpline="0.4,0,0.6,1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E4">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:1.5" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" KeySpline="0.4,0,0.6,1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:3.5" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationEndPosition}" KeySpline="0.4,0,0.6,1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E5">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:1.667" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" KeySpline="0.4,0,0.6,1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:2.667" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationWellPosition}" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:3.667" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseAnimationEndPosition}" KeySpline="0.4,0,0.6,1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B1">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:3" Value="100" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B2">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:2.167" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="100" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B3">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.833" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:2.333" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="100" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B4">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="100" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B5">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:1.167" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:2.667" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="100" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetName="EllipseGrid"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="1"
                                                     Duration="0" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="E1"
                                                                  Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ProgressBarIndeterminateForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="E2"
                                                                  Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ProgressBarIndeterminateForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="E3"
                                                                  Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ProgressBarIndeterminateForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="E4"
                                                                  Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ProgressBarIndeterminateForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="E5"
                                                                  Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ProgressBarIndeterminateForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <!-- Both FadeOutThemeAnimation and a DoubleAnimation on Opacity are necessary
                                         here.  The FadeOutThemeAnimation is necessary in the Indeterminate state so
                                         that we can do a FadeInThemeAnimation when transitioning back to the
                                         Determinate state.  The DoubleAnimation on Opacity is necessary to hide the
                                         DeterminateRoot immediately so that it does not slowly fade out during each
                                         iteration of the Indeterminate state animation. -->
                                            <FadeOutThemeAnimation TargetName="DeterminateRoot" />
                                            <DoubleAnimation Storyboard.TargetName="DeterminateRoot"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0"
                                                     Duration="0" />
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E1">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:3" Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:3" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E2">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E3">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E4">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E5">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Error">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ProgressBarIndicator">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Paused">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ProgressBarIndicator"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0.5"
                                                     Duration="0:0:0.25" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="EllipseGrid"
                          Opacity="0">
                                <Grid.RenderTransform>
                                    <TranslateTransform />
                                </Grid.RenderTransform>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="B1"
                                Grid.Column="8"
                                RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <TranslateTransform />
                                    </Border.RenderTransform>
                                    <Ellipse x:Name="E1"
                                     Fill="{TemplateBinding Foreground}"
                                     Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                     Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                     RenderTransformOrigin="0.5,0.5">
                                        <Ellipse.RenderTransform>
                                            <TranslateTransform />
                                        </Ellipse.RenderTransform>
                                    </Ellipse>
                                </Border>
                                <Rectangle Grid.Column="7"
                                   Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseOffset}" />
                                <Border x:Name="B2"
                                Grid.Column="6"
                                RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <TranslateTransform />
                                    </Border.RenderTransform>
                                    <Ellipse x:Name="E2"
                                     Fill="{TemplateBinding Foreground}"
                                     Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                     Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                     RenderTransformOrigin="0.5,0.5">
                                        <Ellipse.RenderTransform>
                                            <TranslateTransform />
                                        </Ellipse.RenderTransform>
                                    </Ellipse>
                                </Border>
                                <Rectangle Grid.Column="5"
                                   Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseOffset}" />
                                <Border x:Name="B3"
                                Grid.Column="4"
                                RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <TranslateTransform />
                                    </Border.RenderTransform>
                                    <Ellipse x:Name="E3"
                                     Fill="{TemplateBinding Foreground}"
                                     Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                     Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                     RenderTransformOrigin="0.5,0.5">
                                        <Ellipse.RenderTransform>
                                            <TranslateTransform />
                                        </Ellipse.RenderTransform>
                                    </Ellipse>
                                </Border>
                                <Rectangle Grid.Column="3"
                                   Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseOffset}" />
                                <Border x:Name="B4"
                                Grid.Column="2"
                                RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <TranslateTransform />
                                    </Border.RenderTransform>
                                    <Ellipse x:Name="E4"
                                     Fill="{TemplateBinding Foreground}"
                                     Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                     Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                     RenderTransformOrigin="0.5,0.5">
                                        <Ellipse.RenderTransform>
                                            <TranslateTransform />
                                        </Ellipse.RenderTransform>
                                    </Ellipse>
                                </Border>
                                <Rectangle Grid.Column="1"
                                   Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseOffset}" />
                                <Border x:Name="B5"
                                Grid.Column="0"
                                RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <TranslateTransform />
                                    </Border.RenderTransform>
                                    <Ellipse x:Name="E5"
                                     Fill="{TemplateBinding Foreground}"
                                     Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                     Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.EllipseDiameter}"
                                     RenderTransformOrigin="0.5,0.5">
                                        <Ellipse.RenderTransform>
                                            <TranslateTransform />
                                        </Ellipse.RenderTransform>
                                    </Ellipse>
                                </Border>
                            </Grid>
                            <Border x:Name="DeterminateRoot"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                                <Rectangle x:Name="ProgressBarIndicator"
                                   Margin="{TemplateBinding Padding}"
                                   Fill="{TemplateBinding Foreground}"
                                   HorizontalAlignment="Left" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="GridViewStyle1" TargetType="GridView">
            <Setter Property="Padding" Value="0,0,0,10"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="TabNavigation" Value="Once"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Enabled"/>
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled"/>
            <Setter Property="ScrollViewer.ZoomMode" Value="Disabled"/>
            <Setter Property="IsSwipeEnabled" Value="True"/>
            <Setter Property="ItemContainerTransitions">
                <Setter.Value>
                    <TransitionCollection>
                        <AddDeleteThemeTransition/>
                        <ContentThemeTransition/>
                        <ReorderThemeTransition/>
                        <EntranceThemeTransition IsStaggeringEnabled="False"/>
                    </TransitionCollection>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <WrapGrid Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridView">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <ScrollViewer x:Name="ScrollViewer" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" Padding="{TemplateBinding Padding}" TabNavigation="{TemplateBinding TabNavigation}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
                                <StackPanel Height="100" Width="100">
                                    <Image Height="100" Source="Images/HubImage2.png" Stretch="Fill"/>
                                </StackPanel>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="StoreFrontTileTemplate">


            <Grid HorizontalAlignment="Left">

                <ListView Margin="30">
                    <!--<ListViewItem>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="/WpfTutorialSamples;component/Images/bullet_green.png" Margin="0,0,5,0" />
                            <TextBlock>Green</TextBlock>
                        </StackPanel>
                    </ListViewItem>
                    <ListViewItem>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="/WpfTutorialSamples;component/Images/bullet_blue.png" Margin="0,0,5,0" />
                            <TextBlock>Blue</TextBlock>
                        </StackPanel>
                    </ListViewItem>-->
                    <ListViewItem >
                        
                        <StackPanel Orientation="Horizontal">
                            <!--<Image Source="/WpfTutorialSamples;component/Images/bullet_red.png" Margin="0,0,5,0" />-->
                          
                     
                            <TextBlock x:Name="titleTextBlock"  TextWrapping="Wrap"  FontSize="12.667" FontWeight="Light" Width="350" Height="150" VerticalAlignment="Center" HorizontalAlignment="Left" FontFamily="Segoe UI">
                                <!--<TextBlock.Foreground>
                                    <ImageBrush ImageSource="{Binding RoleImg, Mode=OneWay}" />
                                </TextBlock.Foreground>-->   
                        
                           <Run Text="FileName:"/>
                           <Run Text="{Binding Name, Mode=OneWay}"/>
                                  <LineBreak/>
                           <Run Text="Image1 Upload Started at:"/>
                           <Run Text="{Binding UploadStartTime, Mode=OneWay}"/>
                                <LineBreak/>
                           <Run Text="Image1 Upload Completed at:"/>
                           <Run Text="{Binding UploadEndtime, Mode=OneWay}"/>                          
                         
                                 <LineBreak/>
                                 
                                 <Run Text="Size:"/>
                           <Run Text="{Binding Size, Mode=OneWay}"/>
                                <Run Text="MB"/>
                                <LineBreak/>
                                 <Run Text="Status:"/>
                           <Run Text="{Binding Status, Mode=TwoWay}"/>
                                <LineBreak/>

                            </TextBlock>
                         
                            <ProgressBar HorizontalAlignment="Left"  VerticalAlignment="Bottom" Foreground="Yellow" Value="{Binding Status, Mode=OneWay}" ></ProgressBar>

                        </StackPanel>

                       
                    </ListViewItem>
                </ListView>

                <!--<StackPanel Orientation="Horizontal" Margin="3,3,0,0">
                   
                    <StackPanel Margin="0,0,0,0" Orientation="Vertical">
                        <Border Margin="8" 
                                BorderThickness="4"
                                BorderBrush="Gray"                             
                               >
                            
                            

                            <TextBlock x:Name="titleTextBlock"  TextWrapping="Wrap"  FontSize="12.667" FontWeight="Light" Width="350" Height="150" VerticalAlignment="Center" HorizontalAlignment="Left" FontFamily="Segoe UI">
                            -->
                <!--<TextBlock.Foreground>
                                    <ImageBrush ImageSource="{Binding RoleImg, Mode=OneWay}" />
                            </TextBlock.Foreground>-->
                <!--   
                            
                           <Run Text="FileName:"/>
                           <Run Text="{Binding name, Mode=OneWay}"/>
                                  <LineBreak/>
                           <Run Text="UploadStarted at:"/>
                           <Run Text="{Binding uploadStartTime, Mode=OneWay}"/>
                                  <LineBreak/>
                           <Run Text="uploadEndtime at:"/>
                           <Run Text="{Binding uploadEndtime, Mode=OneWay}"/>
                           -->
                <!--<Run Text="{Binding RoleString, Mode=OneWay}"/>-->
                <!--
                                 <LineBreak/>
                                 <Run Text="URL:"/>
                           <Run Text="{Binding url, Mode=OneWay}"/>
                           -->
                <!--<Run Text="{Binding RoleImg, Mode=OneWay}"/>-->
                <!--

                            </TextBlock>

                        </Border>
                        -->
                <!--<TextBlock x:Name="categoryTextBlock" Text="{Binding  UserRole, Mode=OneWay}"  TextWrapping="Wrap" Foreground="{StaticResource ApplicationForegroundThemeBrush}" FontSize="14.667" FontWeight="Light" Width="200" MaxHeight="20" VerticalAlignment="Center" HorizontalAlignment="Left"/>-->
                <!--

                    </StackPanel>
                </StackPanel>-->
            </Grid>
        </DataTemplate>

    </UserControl.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Image Source="Assets/et-background.png" Stretch="Fill" Grid.RowSpan="2" Margin="0,-10,0,10"/>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Grid.Column="1" Text=" Download Statistics" Style="{StaticResource PageHeaderTextStyle}" />
            <ProgressBar x:Name="progressbar"   Foreground="Green" IsIndeterminate="False"  VerticalAlignment="Bottom"   Background="White"  
                 Height="20" Margin="353,0,493,9" 
                  Maximum="100"  Width="400" Grid.Column="1"/>
            <TextBlock x:Name="uploadinfo" FontSize="18" Text="asdfasd" Foreground="Aquamarine" VerticalAlignment="Bottom" Margin="351,0,685,-50"  Height="50" Grid.Column="2" Width="800">

            </TextBlock>
        </Grid>



   


        <Grid x:Name="gridSnap" Visibility="Collapsed" Grid.Row="1">
            <StackPanel Margin="15,0,20,20" Orientation="Vertical" d:LayoutOverrides="Height">

                <TextBlock Foreground="#ffffff" TextWrapping="Wrap" FontSize="26.667" Margin="0,200,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Light" >
                    <Run Text="Please switch to full screen to view the details."/>
                    <LineBreak/>
                    <Run/>
                    <LineBreak/>
                    <Run Text="" />
                    <LineBreak/>
                    <Run/>
                    <LineBreak/>
                    <LineBreak/>
                    <Run/>
                    <LineBreak/>
                </TextBlock>
            </StackPanel>
            <Image Margin="0,495,0,0" Source="Assets/Images/bg.jpg" Stretch="Fill"/>
        </Grid>



        <Grid x:Name="Output" HorizontalAlignment="Left"  VerticalAlignment="Top" Grid.Row="1" >


            <!--This shows a hard-coded width to show within the SDK Sample framework.  In a real application you likely wouldn't set a width on the GridView-->
            <GridView x:Name="ItemGridView" Width="1350"  
                      ItemTemplate="{StaticResource StoreFrontTileTemplate}"
                      BorderBrush="LightGray" VerticalAlignment="Top" BorderThickness="1" 
                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                      ScrollViewer.HorizontalScrollBarVisibility="Auto" SelectionMode="None" SelectionChanged="ItemGridView_SelectionChanged" Margin="0,-1,0,0"  >


                <!--<Grid HorizontalAlignment="Left">
                    <StackPanel Orientation="Horizontal" Margin="10,10,0,0">
                        <Image x:Name="image" Height="60" Width="60" VerticalAlignment="Center" Margin="0,0,10,0"/>
                        <StackPanel Margin="0,0,0,0" Orientation="Vertical">
                            <Image Source="Assets/user.png" Width="25" ></Image>
                            -->
                <!--<TextBlock x:Name="titleTextBlock" Text="{Binding FirstName, Mode=OneWay}" TextWrapping="Wrap" Foreground="{StaticResource ApplicationForegroundThemeBrush}" FontSize="14.667" FontWeight="Light" Width="200" VerticalAlignment="Center" HorizontalAlignment="Left" FontFamily="Segoe UI"/>
                            <TextBlock x:Name="categoryTextBlock" Text="{Binding  LastName, Mode=OneWay}"  TextWrapping="Wrap" Foreground="{StaticResource ApplicationForegroundThemeBrush}" FontSize="14.667" FontWeight="Light" Width="200" MaxHeight="20" VerticalAlignment="Center" HorizontalAlignment="Left"/>-->
                <!--
                        </StackPanel>
                    </StackPanel>
                </Grid>-->
            </GridView>

            
        </Grid>
        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup>
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="gridSnap" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
